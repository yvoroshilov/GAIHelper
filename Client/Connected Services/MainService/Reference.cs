//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.MainService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdminDto", Namespace="http://schemas.datacontract.org/2004/07/GaiWcfService.Dto")]
    [System.SerializableAttribute()]
    public partial class AdminDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeDto", Namespace="http://schemas.datacontract.org/2004/07/GaiWcfService.Dto")]
    [System.SerializableAttribute()]
    public partial class EmployeeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int certificateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime hireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.MainService.Post rankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int certificateId {
            get {
                return this.certificateIdField;
            }
            set {
                if ((this.certificateIdField.Equals(value) != true)) {
                    this.certificateIdField = value;
                    this.RaisePropertyChanged("certificateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime hireDate {
            get {
                return this.hireDateField;
            }
            set {
                if ((this.hireDateField.Equals(value) != true)) {
                    this.hireDateField = value;
                    this.RaisePropertyChanged("hireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patronymic {
            get {
                return this.patronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.patronymicField, value) != true)) {
                    this.patronymicField = value;
                    this.RaisePropertyChanged("patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.MainService.Post rank {
            get {
                return this.rankField;
            }
            set {
                if ((this.rankField.Equals(value) != true)) {
                    this.rankField = value;
                    this.RaisePropertyChanged("rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.surnameField, value) != true)) {
                    this.surnameField = value;
                    this.RaisePropertyChanged("surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/GaiWcfService.Dto")]
    public enum Post : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PRIVATE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SERGEANT = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LEIUTENANT = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShiftDto", Namespace="http://schemas.datacontract.org/2004/07/GaiWcfService.Dto")]
    [System.SerializableAttribute()]
    public partial class ShiftDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime endField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int responsibleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime startField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end {
            get {
                return this.endField;
            }
            set {
                if ((this.endField.Equals(value) != true)) {
                    this.endField = value;
                    this.RaisePropertyChanged("end");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int responsibleId {
            get {
                return this.responsibleIdField;
            }
            set {
                if ((this.responsibleIdField.Equals(value) != true)) {
                    this.responsibleIdField = value;
                    this.RaisePropertyChanged("responsibleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime start {
            get {
                return this.startField;
            }
            set {
                if ((this.startField.Equals(value) != true)) {
                    this.startField = value;
                    this.RaisePropertyChanged("start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationDto", Namespace="http://schemas.datacontract.org/2004/07/GaiWcfService.Dto")]
    [System.SerializableAttribute()]
    public partial class ViolationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string carNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double locationEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double locationNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double penaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int personIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string violationTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string carNumber {
            get {
                return this.carNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.carNumberField, value) != true)) {
                    this.carNumberField = value;
                    this.RaisePropertyChanged("carNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double locationE {
            get {
                return this.locationEField;
            }
            set {
                if ((this.locationEField.Equals(value) != true)) {
                    this.locationEField = value;
                    this.RaisePropertyChanged("locationE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double locationN {
            get {
                return this.locationNField;
            }
            set {
                if ((this.locationNField.Equals(value) != true)) {
                    this.locationNField = value;
                    this.RaisePropertyChanged("locationN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double penalty {
            get {
                return this.penaltyField;
            }
            set {
                if ((this.penaltyField.Equals(value) != true)) {
                    this.penaltyField = value;
                    this.RaisePropertyChanged("penalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int personId {
            get {
                return this.personIdField;
            }
            set {
                if ((this.personIdField.Equals(value) != true)) {
                    this.personIdField = value;
                    this.RaisePropertyChanged("personId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string violationTypeId {
            get {
                return this.violationTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.violationTypeIdField, value) != true)) {
                    this.violationTypeIdField = value;
                    this.RaisePropertyChanged("violationTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViolationTypeDto", Namespace="http://schemas.datacontract.org/2004/07/GaiWcfService.Dto")]
    [System.SerializableAttribute()]
    public partial class ViolationTypeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal maxPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal minPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal maxPenalty {
            get {
                return this.maxPenaltyField;
            }
            set {
                if ((this.maxPenaltyField.Equals(value) != true)) {
                    this.maxPenaltyField = value;
                    this.RaisePropertyChanged("maxPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal minPenalty {
            get {
                return this.minPenaltyField;
            }
            set {
                if ((this.minPenaltyField.Equals(value) != true)) {
                    this.minPenaltyField = value;
                    this.RaisePropertyChanged("minPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDto", Namespace="http://schemas.datacontract.org/2004/07/GaiWcfService.Dto")]
    [System.SerializableAttribute()]
    public partial class PersonDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double actualPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string driverLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double paidPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double actualPenalty {
            get {
                return this.actualPenaltyField;
            }
            set {
                if ((this.actualPenaltyField.Equals(value) != true)) {
                    this.actualPenaltyField = value;
                    this.RaisePropertyChanged("actualPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string driverLicense {
            get {
                return this.driverLicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.driverLicenseField, value) != true)) {
                    this.driverLicenseField = value;
                    this.RaisePropertyChanged("driverLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double paidPenalty {
            get {
                return this.paidPenaltyField;
            }
            set {
                if ((this.paidPenaltyField.Equals(value) != true)) {
                    this.paidPenaltyField = value;
                    this.RaisePropertyChanged("paidPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string passportId {
            get {
                return this.passportIdField;
            }
            set {
                if ((object.ReferenceEquals(this.passportIdField, value) != true)) {
                    this.passportIdField = value;
                    this.RaisePropertyChanged("passportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patronymic {
            get {
                return this.patronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.patronymicField, value) != true)) {
                    this.patronymicField = value;
                    this.RaisePropertyChanged("patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.surnameField, value) != true)) {
                    this.surnameField = value;
                    this.RaisePropertyChanged("surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentDto", Namespace="http://schemas.datacontract.org/2004/07/GaiWcfService.Dto")]
    [System.SerializableAttribute()]
    public partial class PaymentDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime paydayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int personIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isPaid {
            get {
                return this.isPaidField;
            }
            set {
                if ((this.isPaidField.Equals(value) != true)) {
                    this.isPaidField = value;
                    this.RaisePropertyChanged("isPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime payday {
            get {
                return this.paydayField;
            }
            set {
                if ((this.paydayField.Equals(value) != true)) {
                    this.paydayField = value;
                    this.RaisePropertyChanged("payday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int personId {
            get {
                return this.personIdField;
            }
            set {
                if ((this.personIdField.Equals(value) != true)) {
                    this.personIdField = value;
                    this.RaisePropertyChanged("personId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MainService.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/Test", ReplyAction="http://tempuri.org/IAdminService/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/Test", ReplyAction="http://tempuri.org/IAdminService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddAdimn", ReplyAction="http://tempuri.org/IAdminService/AddAdimnResponse")]
        void AddAdimn(Client.MainService.AdminDto admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddAdimn", ReplyAction="http://tempuri.org/IAdminService/AddAdimnResponse")]
        System.Threading.Tasks.Task AddAdimnAsync(Client.MainService.AdminDto admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditAdmin", ReplyAction="http://tempuri.org/IAdminService/EditAdminResponse")]
        void EditAdmin(int id, Client.MainService.AdminDto admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditAdmin", ReplyAction="http://tempuri.org/IAdminService/EditAdminResponse")]
        System.Threading.Tasks.Task EditAdminAsync(int id, Client.MainService.AdminDto admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/getAllAdmins", ReplyAction="http://tempuri.org/IAdminService/getAllAdminsResponse")]
        Client.MainService.AdminDto[] getAllAdmins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/getAllAdmins", ReplyAction="http://tempuri.org/IAdminService/getAllAdminsResponse")]
        System.Threading.Tasks.Task<Client.MainService.AdminDto[]> getAllAdminsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddEmployee", ReplyAction="http://tempuri.org/IAdminService/AddEmployeeResponse")]
        void AddEmployee(Client.MainService.EmployeeDto employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddEmployee", ReplyAction="http://tempuri.org/IAdminService/AddEmployeeResponse")]
        System.Threading.Tasks.Task AddEmployeeAsync(Client.MainService.EmployeeDto employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditEmployee", ReplyAction="http://tempuri.org/IAdminService/EditEmployeeResponse")]
        void EditEmployee(int id, Client.MainService.EmployeeDto employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditEmployee", ReplyAction="http://tempuri.org/IAdminService/EditEmployeeResponse")]
        System.Threading.Tasks.Task EditEmployeeAsync(int id, Client.MainService.EmployeeDto employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteEmployee", ReplyAction="http://tempuri.org/IAdminService/DeleteEmployeeResponse")]
        void DeleteEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteEmployee", ReplyAction="http://tempuri.org/IAdminService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task DeleteEmployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditShift", ReplyAction="http://tempuri.org/IAdminService/EditShiftResponse")]
        void EditShift(int id, Client.MainService.ShiftDto shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditShift", ReplyAction="http://tempuri.org/IAdminService/EditShiftResponse")]
        System.Threading.Tasks.Task EditShiftAsync(int id, Client.MainService.ShiftDto shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllViolations", ReplyAction="http://tempuri.org/IAdminService/GetAllViolationsResponse")]
        Client.MainService.ViolationDto[] GetAllViolations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllViolations", ReplyAction="http://tempuri.org/IAdminService/GetAllViolationsResponse")]
        System.Threading.Tasks.Task<Client.MainService.ViolationDto[]> GetAllViolationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteViolation", ReplyAction="http://tempuri.org/IAdminService/DeleteViolationResponse")]
        void DeleteViolation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteViolation", ReplyAction="http://tempuri.org/IAdminService/DeleteViolationResponse")]
        System.Threading.Tasks.Task DeleteViolationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddViolationType", ReplyAction="http://tempuri.org/IAdminService/AddViolationTypeResponse")]
        void AddViolationType(Client.MainService.ViolationTypeDto violationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddViolationType", ReplyAction="http://tempuri.org/IAdminService/AddViolationTypeResponse")]
        System.Threading.Tasks.Task AddViolationTypeAsync(Client.MainService.ViolationTypeDto violationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditViolationType", ReplyAction="http://tempuri.org/IAdminService/EditViolationTypeResponse")]
        void EditViolationType(int id, Client.MainService.ViolationTypeDto violationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditViolationType", ReplyAction="http://tempuri.org/IAdminService/EditViolationTypeResponse")]
        System.Threading.Tasks.Task EditViolationTypeAsync(int id, Client.MainService.ViolationTypeDto violationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteViolationType", ReplyAction="http://tempuri.org/IAdminService/DeleteViolationTypeResponse")]
        void DeleteViolationType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteViolationType", ReplyAction="http://tempuri.org/IAdminService/DeleteViolationTypeResponse")]
        System.Threading.Tasks.Task DeleteViolationTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddPerson", ReplyAction="http://tempuri.org/IAdminService/AddPersonResponse")]
        void AddPerson(Client.MainService.PersonDto person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddPerson", ReplyAction="http://tempuri.org/IAdminService/AddPersonResponse")]
        System.Threading.Tasks.Task AddPersonAsync(Client.MainService.PersonDto person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditPerson", ReplyAction="http://tempuri.org/IAdminService/EditPersonResponse")]
        void EditPerson(int id, Client.MainService.PersonDto person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/EditPerson", ReplyAction="http://tempuri.org/IAdminService/EditPersonResponse")]
        System.Threading.Tasks.Task EditPersonAsync(int id, Client.MainService.PersonDto person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeletePerson", ReplyAction="http://tempuri.org/IAdminService/DeletePersonResponse")]
        void DeletePerson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeletePerson", ReplyAction="http://tempuri.org/IAdminService/DeletePersonResponse")]
        System.Threading.Tasks.Task DeletePersonAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : Client.MainService.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<Client.MainService.IAdminService>, Client.MainService.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public void AddAdimn(Client.MainService.AdminDto admin) {
            base.Channel.AddAdimn(admin);
        }
        
        public System.Threading.Tasks.Task AddAdimnAsync(Client.MainService.AdminDto admin) {
            return base.Channel.AddAdimnAsync(admin);
        }
        
        public void EditAdmin(int id, Client.MainService.AdminDto admin) {
            base.Channel.EditAdmin(id, admin);
        }
        
        public System.Threading.Tasks.Task EditAdminAsync(int id, Client.MainService.AdminDto admin) {
            return base.Channel.EditAdminAsync(id, admin);
        }
        
        public Client.MainService.AdminDto[] getAllAdmins() {
            return base.Channel.getAllAdmins();
        }
        
        public System.Threading.Tasks.Task<Client.MainService.AdminDto[]> getAllAdminsAsync() {
            return base.Channel.getAllAdminsAsync();
        }
        
        public void AddEmployee(Client.MainService.EmployeeDto employee) {
            base.Channel.AddEmployee(employee);
        }
        
        public System.Threading.Tasks.Task AddEmployeeAsync(Client.MainService.EmployeeDto employee) {
            return base.Channel.AddEmployeeAsync(employee);
        }
        
        public void EditEmployee(int id, Client.MainService.EmployeeDto employee) {
            base.Channel.EditEmployee(id, employee);
        }
        
        public System.Threading.Tasks.Task EditEmployeeAsync(int id, Client.MainService.EmployeeDto employee) {
            return base.Channel.EditEmployeeAsync(id, employee);
        }
        
        public void DeleteEmployee(int id) {
            base.Channel.DeleteEmployee(id);
        }
        
        public System.Threading.Tasks.Task DeleteEmployeeAsync(int id) {
            return base.Channel.DeleteEmployeeAsync(id);
        }
        
        public void EditShift(int id, Client.MainService.ShiftDto shift) {
            base.Channel.EditShift(id, shift);
        }
        
        public System.Threading.Tasks.Task EditShiftAsync(int id, Client.MainService.ShiftDto shift) {
            return base.Channel.EditShiftAsync(id, shift);
        }
        
        public Client.MainService.ViolationDto[] GetAllViolations() {
            return base.Channel.GetAllViolations();
        }
        
        public System.Threading.Tasks.Task<Client.MainService.ViolationDto[]> GetAllViolationsAsync() {
            return base.Channel.GetAllViolationsAsync();
        }
        
        public void DeleteViolation(int id) {
            base.Channel.DeleteViolation(id);
        }
        
        public System.Threading.Tasks.Task DeleteViolationAsync(int id) {
            return base.Channel.DeleteViolationAsync(id);
        }
        
        public void AddViolationType(Client.MainService.ViolationTypeDto violationType) {
            base.Channel.AddViolationType(violationType);
        }
        
        public System.Threading.Tasks.Task AddViolationTypeAsync(Client.MainService.ViolationTypeDto violationType) {
            return base.Channel.AddViolationTypeAsync(violationType);
        }
        
        public void EditViolationType(int id, Client.MainService.ViolationTypeDto violationType) {
            base.Channel.EditViolationType(id, violationType);
        }
        
        public System.Threading.Tasks.Task EditViolationTypeAsync(int id, Client.MainService.ViolationTypeDto violationType) {
            return base.Channel.EditViolationTypeAsync(id, violationType);
        }
        
        public void DeleteViolationType(int id) {
            base.Channel.DeleteViolationType(id);
        }
        
        public System.Threading.Tasks.Task DeleteViolationTypeAsync(int id) {
            return base.Channel.DeleteViolationTypeAsync(id);
        }
        
        public void AddPerson(Client.MainService.PersonDto person) {
            base.Channel.AddPerson(person);
        }
        
        public System.Threading.Tasks.Task AddPersonAsync(Client.MainService.PersonDto person) {
            return base.Channel.AddPersonAsync(person);
        }
        
        public void EditPerson(int id, Client.MainService.PersonDto person) {
            base.Channel.EditPerson(id, person);
        }
        
        public System.Threading.Tasks.Task EditPersonAsync(int id, Client.MainService.PersonDto person) {
            return base.Channel.EditPersonAsync(id, person);
        }
        
        public void DeletePerson(int id) {
            base.Channel.DeletePerson(id);
        }
        
        public System.Threading.Tasks.Task DeletePersonAsync(int id) {
            return base.Channel.DeletePersonAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MainService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddPayment", ReplyAction="http://tempuri.org/IUserService/AddPaymentResponse")]
        void AddPayment(Client.MainService.PaymentDto payment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddPayment", ReplyAction="http://tempuri.org/IUserService/AddPaymentResponse")]
        System.Threading.Tasks.Task AddPaymentAsync(Client.MainService.PaymentDto payment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditPayment", ReplyAction="http://tempuri.org/IUserService/EditPaymentResponse")]
        void EditPayment(int id, Client.MainService.PaymentDto payment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditPayment", ReplyAction="http://tempuri.org/IUserService/EditPaymentResponse")]
        System.Threading.Tasks.Task EditPaymentAsync(int id, Client.MainService.PaymentDto payment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeletePayment", ReplyAction="http://tempuri.org/IUserService/DeletePaymentResponse")]
        void DeletePayment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeletePayment", ReplyAction="http://tempuri.org/IUserService/DeletePaymentResponse")]
        System.Threading.Tasks.Task DeletePaymentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddShift", ReplyAction="http://tempuri.org/IUserService/AddShiftResponse")]
        void AddShift(Client.MainService.ShiftDto shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddShift", ReplyAction="http://tempuri.org/IUserService/AddShiftResponse")]
        System.Threading.Tasks.Task AddShiftAsync(Client.MainService.ShiftDto shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddViolation", ReplyAction="http://tempuri.org/IUserService/AddViolationResponse")]
        void AddViolation(Client.MainService.ViolationDto violation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddViolation", ReplyAction="http://tempuri.org/IUserService/AddViolationResponse")]
        System.Threading.Tasks.Task AddViolationAsync(Client.MainService.ViolationDto violation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditViolation", ReplyAction="http://tempuri.org/IUserService/EditViolationResponse")]
        void EditViolation(int id, Client.MainService.ViolationDto violation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditViolation", ReplyAction="http://tempuri.org/IUserService/EditViolationResponse")]
        System.Threading.Tasks.Task EditViolationAsync(int id, Client.MainService.ViolationDto violation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllViolationTypes", ReplyAction="http://tempuri.org/IUserService/GetAllViolationTypesResponse")]
        Client.MainService.ViolationTypeDto[] GetAllViolationTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllViolationTypes", ReplyAction="http://tempuri.org/IUserService/GetAllViolationTypesResponse")]
        System.Threading.Tasks.Task<Client.MainService.ViolationTypeDto[]> GetAllViolationTypesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Client.MainService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Client.MainService.IUserService>, Client.MainService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddPayment(Client.MainService.PaymentDto payment) {
            base.Channel.AddPayment(payment);
        }
        
        public System.Threading.Tasks.Task AddPaymentAsync(Client.MainService.PaymentDto payment) {
            return base.Channel.AddPaymentAsync(payment);
        }
        
        public void EditPayment(int id, Client.MainService.PaymentDto payment) {
            base.Channel.EditPayment(id, payment);
        }
        
        public System.Threading.Tasks.Task EditPaymentAsync(int id, Client.MainService.PaymentDto payment) {
            return base.Channel.EditPaymentAsync(id, payment);
        }
        
        public void DeletePayment(int id) {
            base.Channel.DeletePayment(id);
        }
        
        public System.Threading.Tasks.Task DeletePaymentAsync(int id) {
            return base.Channel.DeletePaymentAsync(id);
        }
        
        public void AddShift(Client.MainService.ShiftDto shift) {
            base.Channel.AddShift(shift);
        }
        
        public System.Threading.Tasks.Task AddShiftAsync(Client.MainService.ShiftDto shift) {
            return base.Channel.AddShiftAsync(shift);
        }
        
        public void AddViolation(Client.MainService.ViolationDto violation) {
            base.Channel.AddViolation(violation);
        }
        
        public System.Threading.Tasks.Task AddViolationAsync(Client.MainService.ViolationDto violation) {
            return base.Channel.AddViolationAsync(violation);
        }
        
        public void EditViolation(int id, Client.MainService.ViolationDto violation) {
            base.Channel.EditViolation(id, violation);
        }
        
        public System.Threading.Tasks.Task EditViolationAsync(int id, Client.MainService.ViolationDto violation) {
            return base.Channel.EditViolationAsync(id, violation);
        }
        
        public Client.MainService.ViolationTypeDto[] GetAllViolationTypes() {
            return base.Channel.GetAllViolationTypes();
        }
        
        public System.Threading.Tasks.Task<Client.MainService.ViolationTypeDto[]> GetAllViolationTypesAsync() {
            return base.Channel.GetAllViolationTypesAsync();
        }
    }
}
